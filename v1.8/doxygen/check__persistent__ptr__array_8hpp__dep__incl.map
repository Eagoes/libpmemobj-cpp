<map id="libpmemobj++/detail/check_persistent_ptr_array.hpp" name="libpmemobj++/detail/check_persistent_ptr_array.hpp">
<area shape="rect" id="node2" href="$make__persistent_8hpp.html" title="Persistent_ptr transactional allocation functions for objects. " alt="" coords="160,206,389,233"/>
<area shape="rect" id="node9" href="$make__persistent__array_8hpp.html" title="Persistent_ptr allocation functions for arrays. " alt="" coords="211,109,415,151"/>
<area shape="rect" id="node10" href="$make__persistent__array__atomic_8hpp.html" title="Atomic persistent_ptr allocation functions for arrays. " alt="" coords="439,109,643,151"/>
<area shape="rect" id="node11" href="$make__persistent__atomic_8hpp.html" title="Persistent_ptr atomic allocation functions for objects. " alt="" coords="477,199,681,240"/>
<area shape="rect" id="node3" href="$concurrent__hash__map_8hpp_source.html" title="libpmemobj++/container\l/concurrent_hash_map.hpp" alt="" coords="5,288,184,329"/>
<area shape="rect" id="node4" href="$vector_8hpp.html" title="Vector container with std::vector compatible interface. " alt="" coords="157,377,318,419"/>
<area shape="rect" id="node7" href="$segment__vector_8hpp.html" title="A persistent version of segment vector implementation. " alt="" coords="329,467,511,508"/>
<area shape="rect" id="node8" href="$temp__value_8hpp.html" title="temp_value template class for caching objects. " alt="" coords="259,288,397,329"/>
<area shape="rect" id="node5" href="$basic__string_8hpp.html" title="String container with std::basic_string compatible interface. " alt="" coords="143,467,305,508"/>
<area shape="rect" id="node6" href="$string_8hpp.html" title="String typedefs for common character types. " alt="" coords="143,556,305,597"/>
</map>
